import java.util.Date
apply plugin: 'maven'
//release 地址
def RELEASE_REPOSITORY_URL = "http://172.20.10.54:8081/nexus/content/repositories/releases/"
def SNAPSHOT_REPOSITORY_URL = "http://172.20.10.54:8081/nexus/content/repositories/snapshots/"
//判断 VERSION_NAME 如果以`-SHAPSHOT`结尾,则上传地址为 snapshot 地址
def REPOSITORY_URL = VERSION_NAME.endsWith("-SNAPSHOT") ? SNAPSHOT_REPOSITORY_URL : RELEASE_REPOSITORY_URL;
ext{
    NEXUS_USERNAME='admin'
    NEXUS_PASSWORD='admin123'
}
def buildTime() {
    return new Date().format("yyyyMMddHHmm")
}

//获取commit id
def getRevision() {
    def code = new ByteArrayOutputStream()
    try {
        exec {
            commandLine 'git', 'rev-parse', '--short', 'HEAD'
            standardOutput = code
        }
    } catch (Throwable e) {
        e.printStackTrace()
    }
    return code.toString().trim()
}
//获取分支
def getBranch() {
    def code = new ByteArrayOutputStream()
    try {
        exec {
            commandLine 'git', 'rev-parse', '--abbrev-ref', 'HEAD'
            standardOutput = code
        }
    } catch (Throwable e) {
        e.printStackTrace()
    }
    return code.toString().trim()
}
afterEvaluate { project ->
    uploadArchives {
        doFirst{
            if (project.pluginManager.findPlugin("com.android.application") != null) {
                throw new Exception("u can not push an application")
            }
        }
    
        repositories.mavenDeployer {
            pom.groupId = GROUP
            pom.artifactId = POM_ARTIFACT_ID
            pom.version = buildTime() + "-SNAPSHOT"
            repository(url: REPOSITORY_URL) {
                authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
            }
        }
    }
    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.sourceFiles
    }

    artifacts {
        archives androidSourcesJar
    }
    
    android.sourceSets.main.res.sourceFiles.files.each {file->
        if (file.parentFile.absolutePath.contains("drawable")) {
            if (hasInValidFile(file.parentFile)) {
                throw new Exception("drawable name invalid")
            }
        } else if (file.parentFile.absolutePath.contains("layout")) {
            if (hasInValidFile(file.parentFile)) {
                throw new Exception("layout name invalid")
            }
        }
    }

    
}

// 若当前目录下的文件不以news_开始，则返回true
boolean hasInValidFile(File dir) {
    boolean a = false
    if (dir.isDirectory()) {
        dir.listFiles().each {file->
            if (!file.name.startsWith(MODULE_NAME)) {
                println(file.name)
                a = true
            }
        }
    }
    return a
}
